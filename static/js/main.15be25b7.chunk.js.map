{"version":3,"sources":["components/Expenses/ExpensesFilter/ExpensesFilter.tsx","components/Expenses/ExpensesList/ExpenseItem/ExpenseDate/ExpenseDate.tsx","components/Card/Card.tsx","components/Expenses/ExpensesList/ExpenseItem/ExpenseItem.tsx","components/Expenses/ExpensesList/ExpensesList.tsx","components/Expenses/ExpensesChart/Chart/ChartBar/ChartBar.tsx","components/Expenses/ExpensesChart/Chart/Chart.tsx","components/Expenses/ExpensesChart/ExpensesChart.tsx","components/Expenses/Expenses.tsx","components/NewExpense/ExpenseForm/ExpenseForm.tsx","helpers/helpers.tsx","components/NewExpense/NewExpense.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ExpensesFilter","props","className","onChange","event","target","value","defaultValue","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","max","ExpensesChart","chartDataPoints","forEach","expenseMonth","getMonth","Expenses","useState","filterYear","setFilterYear","filter","Number","ExpenseForm","today","d0","d","Date","getTime","getTimezoneOffset","toISOString","split","getYYYYMMDD","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","now","toString","onSubmitExpenseData","htmlFor","type","required","min","step","onClick","onCancel","NewExpense","isAddExpense","setIsAddExpense","onAddExpense","App","DUMMY_EXPENSES","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15be25b7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\ntype Props = {\n  onChange: (year: string) => void;\n  selected: string;\n};\n\nconst ExpensesFilter = (props: Props) => {\n  const selectChangeHandler: React.ChangeEventHandler<HTMLSelectElement> = (\n    event\n  ) => {\n    props.onChange(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={selectChangeHandler} defaultValue={props.selected}>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ExpenseDate.css\";\n\ntype Props = {\n  date: Date;\n};\n\nconst ExpenseDate = (props: Props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./Card.css\";\n\ntype Props = {\n  className: String;\n  children: React.ReactNode;\n};\nconst Card = (props: Props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\nexport default Card;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate/ExpenseDate\";\nimport Card from \"../../../Card/Card\";\n\ntype Props = {\n  date: Date;\n  title: String;\n  amount: Number;\n};\n\nconst ExpenseItem = (props: Props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">&#x20B9; {props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport { Expense } from \"../../../helpers/types\";\nimport ExpenseItem from \"./ExpenseItem/ExpenseItem\";\nimport \"./ExpensesList.css\";\n\ntype Props = {\n  expenses: Expense[];\n};\n\nconst ExpensesList = (props: Props) => {\n  if (props.expenses.length === 0)\n    return <h2 className=\"expenses-list__fallback\">Found no Expenses!</h2>;\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.expenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          date={expense.date}\n          amount={expense.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\ntype Props = {\n  value: number;\n  maxValue: number;\n  label: string;\n};\nconst ChartBar = (props: Props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar/ChartBar\";\n\ntype dataPoints = { label: string; value: number };\ntype Props = {\n  dataPoints: dataPoints[];\n};\n\nconst Chart = (props: Props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const max = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          value={dataPoint.value}\n          maxValue={max}\n          label={dataPoint.label}\n          key={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"./Chart/Chart\";\nimport { Expense } from \"../../../helpers/types\";\n\ntype Props = {\n  expenses: Expense[];\n};\n\nconst ExpensesChart = (props: Props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  props.expenses.forEach((expense) => {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  });\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpensesFilter from \"./ExpensesFilter/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList/ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart/ExpensesChart\";\nimport Card from \"../Card/Card\";\nimport \"./Expenses.css\";\nimport { Expense } from \"../../helpers/types\";\n\ntype Props = {\n  expenses: Expense[];\n};\n\nconst Expenses = (props: Props) => {\n  const [filterYear, setFilterYear] = useState(\"2021\");\n  const filterYearHandler = (year: string) => {\n    setFilterYear(year);\n  };\n  const expenses = props.expenses.filter(\n    (value) => value.date.getFullYear() === Number(filterYear)\n  );\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter selected={filterYear} onChange={filterYearHandler} />\n      <ExpensesChart expenses={expenses} />\n      <ExpensesList expenses={expenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { getYYYYMMDD } from \"../../../helpers/helpers\";\nimport { Expense } from \"../../../helpers/types\";\n\ntype Props = {\n  onSubmitExpenseData: (expense: Expense) => void;\n  onCancel: () => void;\n};\n\nconst ExpenseForm = (props: Props) => {\n  const today = getYYYYMMDD(Date());\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(today);\n\n  const titleChangeHandler: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    const expense = {\n      title: enteredTitle,\n      amount: Number(enteredAmount),\n      date: new Date(enteredDate),\n      id: Date.now().toString(),\n    };\n    props.onSubmitExpenseData(expense);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(today);\n  };\n\n  const cancelHandler: React.MouseEventHandler<HTMLButtonElement> = (event) => {\n    props.onCancel();\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"Title\">Title</label>\n          <input\n            type=\"text\"\n            required\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"0.01\"\n            step=\"0.01\"\n            required\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            min=\"2019-01-01\"\n            max={today}\n            value={enteredDate}\n            required\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={cancelHandler}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","export function getYYYYMMDD(d0: string) {\n  const d = new Date(d0);\n  return new Date(d.getTime() - d.getTimezoneOffset() * 60 * 1000)\n    .toISOString()\n    .split(\"T\")[0];\n}\n","import React, { useState } from \"react\";\nimport { Expense } from \"../../helpers/types\";\nimport ExpenseForm from \"./ExpenseForm/ExpenseForm\";\nimport \"./NewExpense.css\";\n\ninterface Props {\n  onAddExpense: (expense: Expense) => void;\n}\n\nconst NewExpense = (props: Props) => {\n  const [isAddExpense, setIsAddExpense] = useState(false);\n  const cancelExpense = () => {\n    setIsAddExpense(false);\n  };\n  const showExpenseForm = () => {\n    setIsAddExpense(true);\n  };\n  const addExpense = (expense: Expense) => {\n    setIsAddExpense(false);\n    props.onAddExpense(expense);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isAddExpense && (\n        <button onClick={showExpenseForm}>Add New Expense</button>\n      )}\n      {isAddExpense && (\n        <ExpenseForm\n          onCancel={cancelExpense}\n          onSubmitExpenseData={addExpense}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { Expense } from \"./helpers/types\";\n\nconst App = () => {\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: \"e2\",\n      title: \"New Television\",\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpense = (expense: Expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpense} />\n      <Expenses expenses={[...expenses]} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}